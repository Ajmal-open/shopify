{% comment %}
  Futuristic Cart Drawer Section
  Features: Slide-out cart, product management, checkout functionality
{% endcomment %}

<div class="cart-drawer" data-section-id="{{ section.id }}" data-section-type="cart-drawer">
  <div class="cart-drawer__overlay"></div>
  
  <div class="cart-drawer__content">
    <!-- Cart Header -->
    <div class="cart-header">
      <h2 class="cart-title">Shopping Cart</h2>
      <button class="cart-close" aria-label="Close cart">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>

    <!-- Cart Items -->
    <div class="cart-items">
      {% if cart.item_count > 0 %}
        <form action="/cart" method="post" novalidate class="cart-form">
          <div class="cart-items-list">
            {% for item in cart.items %}
              <div class="cart-item" data-item-key="{{ item.key }}">
                
                <!-- Item Image -->
                <div class="cart-item__image">
                  <img src="{{ item.image | image_url: width: 100 }}" alt="{{ item.title }}" loading="lazy">
                </div>

                <!-- Item Details -->
                <div class="cart-item__details">
                  <h3 class="cart-item__title">
                    <a href="{{ item.url }}">{{ item.product.title }}</a>
                  </h3>
                  
                  {% if item.product.has_only_default_variant == false %}
                    <p class="cart-item__variant">{{ item.variant.title }}</p>
                  {% endif %}
                  
                  <div class="cart-item__price">
                    {% if item.original_price != item.final_price %}
                      <span class="cart-item__price--sale">{{ item.final_price | money }}</span>
                      <span class="cart-item__price--compare">{{ item.original_price | money }}</span>
                    {% else %}
                      <span class="cart-item__price--regular">{{ item.original_price | money }}</span>
                    {% endif %}
                  </div>
                </div>

                <!-- Item Quantity -->
                <div class="cart-item__quantity">
                  <button type="button" class="quantity-btn quantity-btn--decrease" data-item-key="{{ item.key }}">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                      <path d="M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                    </svg>
                  </button>
                  
                  <input 
                    type="number" 
                    name="updates[]" 
                    value="{{ item.quantity }}" 
                    min="0" 
                    class="quantity-input"
                    data-item-key="{{ item.key }}"
                  >
                  
                  <button type="button" class="quantity-btn quantity-btn--increase" data-item-key="{{ item.key }}">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                      <path d="M12 5V19M5 12H19" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                    </svg>
                  </button>
                </div>

                <!-- Remove Item -->
                <button type="button" class="cart-item__remove" data-item-key="{{ item.key }}">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                    <path d="M3 6H5H21M8 6V4C8 3.46957 8.21071 2.96086 8.58579 2.58579C8.96086 2.21071 9.46957 2 10 2H14C14.5304 2 15.0391 2.21071 15.4142 2.58579C15.7893 2.96086 16 3.46957 16 4V6M19 6V20C19 20.5304 18.7893 21.0391 18.4142 21.4142C18.0391 21.7893 17.5304 22 17 22H7C6.46957 22 5.96086 21.7893 5.58579 21.4142C5.21071 21.0391 5 20.5304 5 20V6H19Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </button>
              </div>
            {% endfor %}
          </div>

          <!-- Cart Footer -->
          <div class="cart-footer">
            <!-- Cart Totals -->
            <div class="cart-totals">
              <div class="cart-total-row">
                <span>Subtotal</span>
                <span>{{ cart.total_price | money }}</span>
              </div>
              
              {% if cart.cart_level_discount_applications.size > 0 %}
                {% for discount in cart.cart_level_discount_applications %}
                  <div class="cart-total-row cart-discount">
                    <span>Discount ({{ discount.title }})</span>
                    <span>-{{ discount.total_allocated_amount | money }}</span>
                  </div>
                {% endfor %}
              {% endif %}
              
              <div class="cart-total-row cart-total">
                <span>Total</span>
                <span>{{ cart.total_price | money }}</span>
              </div>
            </div>

            <!-- Cart Actions -->
            <div class="cart-actions">
              <button type="submit" name="checkout" class="button button--primary cart-checkout">
                Checkout
                <svg class="button-icon" width="20" height="20" viewBox="0 0 24 24" fill="none">
                  <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2"/>
                </svg>
              </button>
              
              <button type="submit" name="update" class="button button--secondary cart-update">
                Update Cart
              </button>
            </div>

            <!-- Continue Shopping -->
            <div class="cart-continue">
              <a href="/collections/all" class="cart-continue-link">
                Continue Shopping
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                  <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2"/>
                </svg>
              </a>
            </div>
          </div>
        </form>
      {% else %}
        <!-- Empty Cart -->
        <div class="cart-empty">
          <div class="cart-empty__icon">
            <svg width="64" height="64" viewBox="0 0 24 24" fill="none">
              <path d="M9 22C9.55228 22 10 21.5523 10 21C10 20.4477 9.55228 20 9 20C8.44772 20 8 20.4477 8 21C8 21.5523 8.44772 22 9 22Z" stroke="currentColor" stroke-width="2"/>
              <path d="M20 22C20.5523 22 21 21.5523 21 21C21 20.4477 20.5523 20 20 20C19.4477 20 19 20.4477 19 21C19 21.5523 19.4477 22 20 22Z" stroke="currentColor" stroke-width="2"/>
              <path d="M1 1H5L7.68 14.39C7.77144 14.8504 8.02191 15.264 8.38755 15.5583C8.75318 15.8526 9.2107 16.009 9.68 16H19.4C19.8693 16.009 20.3268 15.8526 20.6925 15.5583C21.0581 15.264 21.3086 14.8504 21.4 14.39L23 6H6" stroke="currentColor" stroke-width="2"/>
            </svg>
          </div>
          <h3 class="cart-empty__title">Your cart is empty</h3>
          <p class="cart-empty__text">Looks like you haven't added anything to your cart yet.</p>
          <a href="/collections/all" class="button button--primary">
            Start Shopping
            <svg class="button-icon" width="20" height="20" viewBox="0 0 24 24" fill="none">
              <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2"/>
            </svg>
          </a>
        </div>
      {% endif %}
    </div>
  </div>
</div>

<style>
/* ===== CART DRAWER STYLES ===== */
.cart-drawer {
  position: fixed;
  top: 0;
  right: 0;
  width: 100%;
  height: 100vh;
  z-index: 10000;
  visibility: hidden;
  opacity: 0;
  transition: all var(--transition-slow);
}

.cart-drawer.open {
  visibility: visible;
  opacity: 1;
}

.cart-drawer__overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  opacity: 0;
  transition: opacity var(--transition-normal);
}

.cart-drawer.open .cart-drawer__overlay {
  opacity: 1;
}

.cart-drawer__content {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  max-width: 450px;
  height: 100%;
  background: var(--dark-bg);
  border-left: 1px solid var(--border-color);
  transform: translateX(100%);
  transition: transform var(--transition-slow);
  display: flex;
  flex-direction: column;
}

.cart-drawer.open .cart-drawer__content {
  transform: translateX(0);
}

/* Cart Header */
.cart-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-lg);
  border-bottom: 1px solid var(--border-color);
  background: rgba(255, 255, 255, 0.02);
}

.cart-title {
  font-family: var(--font-primary);
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0;
}

.cart-close {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: var(--spacing-sm);
  border-radius: var(--radius-md);
  transition: all var(--transition-normal);
}

.cart-close:hover {
  color: var(--primary-color);
  background: rgba(255, 255, 255, 0.05);
}

/* Cart Items */
.cart-items {
  flex: 1;
  overflow-y: auto;
  padding: var(--spacing-lg);
}

.cart-items-list {
  margin-bottom: var(--spacing-lg);
}

.cart-item {
  display: grid;
  grid-template-columns: auto 1fr auto auto;
  gap: var(--spacing-md);
  padding: var(--spacing-lg);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-lg);
  margin-bottom: var(--spacing-md);
  background: rgba(255, 255, 255, 0.02);
  transition: all var(--transition-normal);
}

.cart-item:hover {
  border-color: var(--primary-color);
  background: rgba(255, 255, 255, 0.05);
}

.cart-item__image {
  width: 80px;
  height: 80px;
  border-radius: var(--radius-md);
  overflow: hidden;
}

.cart-item__image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.cart-item__details {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.cart-item__title {
  font-family: var(--font-secondary);
  font-size: 1rem;
  font-weight: 600;
  margin: 0 0 var(--spacing-xs) 0;
}

.cart-item__title a {
  color: var(--text-primary);
  text-decoration: none;
  transition: color var(--transition-normal);
}

.cart-item__title a:hover {
  color: var(--primary-color);
}

.cart-item__variant {
  font-family: var(--font-body);
  font-size: 0.9rem;
  color: var(--text-secondary);
  margin: 0 0 var(--spacing-xs) 0;
}

.cart-item__price {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.cart-item__price--sale {
  font-family: var(--font-primary);
  font-weight: 700;
  color: var(--primary-color);
}

.cart-item__price--compare {
  font-family: var(--font-body);
  color: var(--text-secondary);
  text-decoration: line-through;
  font-size: 0.9rem;
}

.cart-item__price--regular {
  font-family: var(--font-primary);
  font-weight: 700;
  color: var(--text-primary);
}

/* Quantity Controls */
.cart-item__quantity {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
}

.quantity-btn {
  width: 32px;
  height: 32px;
  border: 1px solid var(--border-color);
  background: transparent;
  color: var(--text-primary);
  border-radius: var(--radius-sm);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all var(--transition-normal);
}

.quantity-btn:hover {
  background: var(--primary-color);
  color: var(--text-dark);
  border-color: var(--primary-color);
}

.quantity-input {
  width: 50px;
  height: 32px;
  text-align: center;
  border: 1px solid var(--border-color);
  background: transparent;
  color: var(--text-primary);
  border-radius: var(--radius-sm);
  font-family: var(--font-body);
  font-size: 0.9rem;
}

.quantity-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(0, 255, 136, 0.2);
}

/* Remove Button */
.cart-item__remove {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: var(--spacing-xs);
  border-radius: var(--radius-sm);
  transition: all var(--transition-normal);
}

.cart-item__remove:hover {
  color: var(--secondary-color);
  background: rgba(255, 0, 128, 0.1);
}

/* Cart Footer */
.cart-footer {
  border-top: 1px solid var(--border-color);
  padding: var(--spacing-lg);
  background: rgba(255, 255, 255, 0.02);
}

.cart-totals {
  margin-bottom: var(--spacing-lg);
}

.cart-total-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-sm) 0;
  font-family: var(--font-secondary);
}

.cart-total-row:not(:last-child) {
  border-bottom: 1px solid var(--border-color);
}

.cart-discount {
  color: var(--secondary-color);
}

.cart-total {
  font-weight: 700;
  font-size: 1.1rem;
  color: var(--primary-color);
}

.cart-actions {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

.cart-checkout {
  width: 100%;
  justify-content: center;
}

.cart-update {
  width: 100%;
  justify-content: center;
}

.cart-continue {
  text-align: center;
}

.cart-continue-link {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-sm);
  color: var(--text-secondary);
  text-decoration: none;
  font-family: var(--font-secondary);
  font-size: 0.9rem;
  transition: all var(--transition-normal);
}

.cart-continue-link:hover {
  color: var(--primary-color);
}

/* Empty Cart */
.cart-empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  padding: var(--spacing-xxl);
}

.cart-empty__icon {
  color: var(--text-secondary);
  margin-bottom: var(--spacing-lg);
}

.cart-empty__title {
  font-family: var(--font-primary);
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--text-primary);
  margin: 0 0 var(--spacing-md) 0;
}

.cart-empty__text {
  font-family: var(--font-body);
  color: var(--text-secondary);
  margin: 0 0 var(--spacing-xl) 0;
  max-width: 300px;
}

/* Responsive */
@media (max-width: 768px) {
  .cart-drawer__content {
    max-width: 100%;
  }
  
  .cart-item {
    grid-template-columns: auto 1fr;
    gap: var(--spacing-md);
  }
  
  .cart-item__quantity {
    grid-column: 1 / -1;
    justify-content: center;
  }
  
  .cart-item__remove {
    position: absolute;
    top: var(--spacing-sm);
    right: var(--spacing-sm);
  }
}
</style>

<script>
// Cart drawer functionality
document.addEventListener('DOMContentLoaded', function() {
  const cartDrawer = document.querySelector('.cart-drawer');
  const cartToggle = document.querySelector('.cart-toggle');
  const cartClose = document.querySelector('.cart-close');
  const cartOverlay = document.querySelector('.cart-drawer__overlay');

  // Open cart
  if (cartToggle) {
    cartToggle.addEventListener('click', () => {
      cartDrawer.classList.add('open');
      document.body.style.overflow = 'hidden';
    });
  }

  // Close cart
  function closeCart() {
    cartDrawer.classList.remove('open');
    document.body.style.overflow = '';
  }

  if (cartClose) {
    cartClose.addEventListener('click', closeCart);
  }

  if (cartOverlay) {
    cartOverlay.addEventListener('click', closeCart);
  }

  // Quantity controls
  document.addEventListener('click', function(e) {
    if (e.target.matches('.quantity-btn--increase')) {
      const input = e.target.parentNode.querySelector('.quantity-input');
      input.value = parseInt(input.value) + 1;
      updateCartItem(input);
    }

    if (e.target.matches('.quantity-btn--decrease')) {
      const input = e.target.parentNode.querySelector('.quantity-input');
      if (parseInt(input.value) > 1) {
        input.value = parseInt(input.value) - 1;
        updateCartItem(input);
      }
    }

    if (e.target.matches('.cart-item__remove')) {
      const itemKey = e.target.getAttribute('data-item-key');
      removeCartItem(itemKey);
    }
  });

  // Update cart item
  async function updateCartItem(input) {
    const itemKey = input.getAttribute('data-item-key');
    const quantity = parseInt(input.value);

    try {
      const response = await fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          id: itemKey,
          quantity: quantity
        })
      });

      if (response.ok) {
        const cartData = await response.json();
        updateCartUI(cartData);
      }
    } catch (error) {
      console.error('Error updating cart:', error);
    }
  }

  // Remove cart item
  async function removeCartItem(itemKey) {
    try {
      const response = await fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          id: itemKey,
          quantity: 0
        })
      });

      if (response.ok) {
        const cartData = await response.json();
        updateCartUI(cartData);
      }
    } catch (error) {
      console.error('Error removing item:', error);
    }
  }

  // Update cart UI
  function updateCartUI(cartData) {
    // Update cart count in header
    const cartCount = document.querySelector('.cart-count');
    if (cartCount) {
      cartCount.textContent = cartData.item_count;
    }

    // Reload cart drawer content
    location.reload();
  }
});
</script>

{% schema %}
{
  "name": "Cart Drawer",
  "settings": []
}
{% endschema %}
